{"ast":null,"code":"import { getAuth, signInWithPopup, GithubAuthProvider, GoogleAuthProvider } from \"https://www.gstatic.com/firebasejs/9.9.3/firebase-auth.js\";\nexport default class AuthService {\n  constructor() {\n    this.firebaseAuth = getAuth();\n    this.googleProvider = new GoogleAuthProvider();\n    this.githubProvider = new GithubAuthProvider();\n  }\n\n  login(providerName) {\n    const authProvider = this.getProvider(providerName); //return signInWithPopup(this.firebaseAuth, authProvider);\n\n    return signInWithPopup(this.firebaseAuth, authProvider);\n  }\n\n  logout() {\n    this.firebaseAuth.signOut();\n  }\n\n  onAuthChange(onUserChanged) {\n    this.firebaseAuth.onAuthStateChanged(user => {\n      onUserChanged(user);\n    });\n  }\n\n  getProvider(providerName) {\n    switch (providerName) {\n      case \"Google\":\n        return this.googleProvider;\n\n      case \"Github\":\n        return this.githubProvider;\n\n      default:\n        throw new Error(`not supported provider: ${providerName}`);\n    }\n  }\n\n}","map":{"version":3,"names":["getAuth","signInWithPopup","GithubAuthProvider","GoogleAuthProvider","AuthService","constructor","firebaseAuth","googleProvider","githubProvider","login","providerName","authProvider","getProvider","logout","signOut","onAuthChange","onUserChanged","onAuthStateChanged","user","Error"],"sources":["D:/kh-20220415/javacamp/src/service/auth_service.js"],"sourcesContent":["import {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n} from \"https://www.gstatic.com/firebasejs/9.9.3/firebase-auth.js\";\r\nexport default class AuthService {\r\n  constructor() {\r\n    this.firebaseAuth = getAuth();\r\n    this.googleProvider = new GoogleAuthProvider();\r\n    this.githubProvider = new GithubAuthProvider();\r\n  }\r\n  login(providerName) {\r\n    const authProvider = this.getProvider(providerName);\r\n    //return signInWithPopup(this.firebaseAuth, authProvider);\r\n    return signInWithPopup(this.firebaseAuth, authProvider);\r\n  }\r\n\r\n  logout() {\r\n    this.firebaseAuth.signOut();\r\n  }\r\n\r\n  onAuthChange(onUserChanged) {\r\n    this.firebaseAuth.onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  }\r\n\r\n  getProvider(providerName) {\r\n    switch (providerName) {\r\n      case \"Google\":\r\n        return this.googleProvider;\r\n      case \"Github\":\r\n        return this.githubProvider;\r\n      default:\r\n        throw new Error(`not supported provider: ${providerName}`);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,OADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,2DALP;AAMA,eAAe,MAAMC,WAAN,CAAkB;EAC/BC,WAAW,GAAG;IACZ,KAAKC,YAAL,GAAoBN,OAAO,EAA3B;IACA,KAAKO,cAAL,GAAsB,IAAIJ,kBAAJ,EAAtB;IACA,KAAKK,cAAL,GAAsB,IAAIN,kBAAJ,EAAtB;EACD;;EACDO,KAAK,CAACC,YAAD,EAAe;IAClB,MAAMC,YAAY,GAAG,KAAKC,WAAL,CAAiBF,YAAjB,CAArB,CADkB,CAElB;;IACA,OAAOT,eAAe,CAAC,KAAKK,YAAN,EAAoBK,YAApB,CAAtB;EACD;;EAEDE,MAAM,GAAG;IACP,KAAKP,YAAL,CAAkBQ,OAAlB;EACD;;EAEDC,YAAY,CAACC,aAAD,EAAgB;IAC1B,KAAKV,YAAL,CAAkBW,kBAAlB,CAAsCC,IAAD,IAAU;MAC7CF,aAAa,CAACE,IAAD,CAAb;IACD,CAFD;EAGD;;EAEDN,WAAW,CAACF,YAAD,EAAe;IACxB,QAAQA,YAAR;MACE,KAAK,QAAL;QACE,OAAO,KAAKH,cAAZ;;MACF,KAAK,QAAL;QACE,OAAO,KAAKC,cAAZ;;MACF;QACE,MAAM,IAAIW,KAAJ,CAAW,2BAA0BT,YAAa,EAAlD,CAAN;IANJ;EAQD;;AA/B8B"},"metadata":{},"sourceType":"module"}